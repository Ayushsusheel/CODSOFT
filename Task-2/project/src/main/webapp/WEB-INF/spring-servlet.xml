<?xml version="1.0" encoding="UTF-8"?>

<beans  xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       
       xmlns:tx="http://www.springframework.org/schema/tx" 
       
       
        xmlns:mvc="http://www.springframework.org/schema/mvc"    
       
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       
       
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
       
       
       
       
       
       
      <tx:annotation-driven/> <!-- this enables the transactions i.e write operations in DB -->
       
      <context:component-scan base-package="springmvc" /> 
      
      
      
      <mvc:annotation-driven/>
      <mvc:resources location="/WEB-INF/resources/" mapping="/resources/**" />  <!-- location="/WEB-INF/resources/" means konsa wo folder h jha pe meri cheeze rkhi hui h  css,js,images etc [kha pe meri resource rkhi h uski location] -->
       																			<!--  mapping="/resources/**     means  muje style.css use krna  h toh likhna pdega /resources/css/fileName.css , ye basically hmara URL h kaise use krna h , [ye mapping h means resources fir aage uska sub folder fir file name]...-->
       
       
       
     <bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		name="viewResolver">
		<property name="prefix" value="/WEB-INF/views/" />  <!-- <property name="prefix" value="/WEB-INF/views/" /> -->
		<property name="suffix" value=".jsp"></property>
	</bean> 

	 
       
       
       <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
            name="ds">
            <property name="driverClassName" value="com.mysql.jdbc.Driver"  />
   			<property name="url" value="jdbc:mysql://localhost:3306/student_management_system"  /> 
   			<property name="username" value="root" />
   			<property name="password" value="ayush123" />  		
      </bean>
      
      <bean class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"  
                name="factory">	
                																
			
			<property name="dataSource" ref="ds"></property>            
			
			
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>  
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>	
				</props>
			</property>
			
			
			<property name="annotatedClasses">
				<list>
					<value>
						springmvc.model.Student
					</value>
				</list>
			</property>
	  </bean>
       
       <bean class="org.springframework.orm.hibernate5.HibernateTemplate" 
            name="hibernateTemplate">
      	    <property name="sessionFactory" ref="factory"></property>                     
       </bean>
       
       
       <bean class="org.springframework.orm.hibernate5.HibernateTransactionManager"         
            name="transactionManager">  													<!-- this we have add bec we were gwtting error this is read only not write!!! (i.e transaction error!!!) -->		
          <property name="sessionFactory" ref="factory"/>
      
      </bean>
    
       
       <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
       	
       		<property name="basename" value = "/WEB-INF/student_ERROR_MESSAGES"  />
       
       
       </bean>
       
       
        <bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
       
       
       
       
       
       
       
       
</beans>